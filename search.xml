<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>argo-combined-demo</title>
    <url>/posts/612a1ead/</url>
    <content><![CDATA[<blockquote>
<p>Automation of Every - How To combine Argo Events, Workflow &amp; CD</p>
</blockquote>
<span id="more"></span>

<ul>
<li><a href="#%E9%83%A8%E7%BD%B2argo-workflow">部署argo workflow</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2argo-events">部署argo events</a><ul>
<li><a href="#create-the-ns">Create the ns</a></li>
<li><a href="#deploy-argo-events-sa-clusterroles-sensor-controller-eventbus-controller-and-eventsource-controller">Deploy Argo Events, SA, ClusterRoles, Sensor Controller, EventBus Controller and EventSource Controller</a></li>
<li><a href="#deploy-the-eventbus">Deploy the eventbus</a></li>
<li><a href="#create-serviceaccount-to-trigger-workflows">Create ServiceAccount to trigger workflows</a></li>
<li><a href="#create-the-webhook-event-source">Create the webhook event source</a></li>
<li><a href="#create-the-webhook-sensor">Create the webhook sensor</a></li>
</ul>
</li>
<li><a href="#%E9%83%A8%E7%BD%B2argo-cd">部署argo cd</a></li>
</ul>
<h2 id="部署argo-workflow"><a href="#部署argo-workflow" class="headerlink" title="部署argo workflow"></a>部署argo workflow</h2><blockquote>
<p>云原生工作流引擎，专注于任务编排</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在argo-events namespace中创建argo workflow服务</span></span><br><span class="line">kubectl create ns argo-events</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载argo-workflow资源文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改资源文件中RoleBinding和ClusterRoleBinding的namespace argo为argo-events</span></span><br><span class="line">wget https://raw.githubusercontent.com/argoproj/argo-workflows/master/manifests/quick-start-postgres.yaml</span><br><span class="line">kubectl apply -n argo-events -f quick-start-postgres.yaml</span><br></pre></td></tr></table></figure>
<h2 id="部署argo-events"><a href="#部署argo-events" class="headerlink" title="部署argo events"></a>部署argo events</h2><blockquote>
<p>云原生的事件驱动架构<br>部署argo events之前确保workflow已经可以工作</p>
</blockquote>
<h3 id="Create-the-ns"><a href="#Create-the-ns" class="headerlink" title="Create the ns"></a>Create the ns</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create the ns</span></span><br><span class="line">kubectl create namespace argo-events</span><br></pre></td></tr></table></figure>
<h3 id="Deploy-Argo-Events-SA-ClusterRoles-Sensor-Controller-EventBus-Controller-and-EventSource-Controller"><a href="#Deploy-Argo-Events-SA-ClusterRoles-Sensor-Controller-EventBus-Controller-and-EventSource-Controller" class="headerlink" title="Deploy Argo Events, SA, ClusterRoles, Sensor Controller, EventBus Controller and EventSource Controller"></a>Deploy Argo Events, SA, ClusterRoles, Sensor Controller, EventBus Controller and EventSource Controller</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-events/stable/manifests/install.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> Install with a validating admission controller</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-events/stable/manifests/install-validating-webhook.yaml</span><br></pre></td></tr></table></figure>
<h3 id="Deploy-the-eventbus"><a href="#Deploy-the-eventbus" class="headerlink" title="Deploy the eventbus"></a>Deploy the eventbus</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/stable/examples/eventbus/native.yaml</span><br></pre></td></tr></table></figure>
<h3 id="Create-ServiceAccount-to-trigger-workflows"><a href="#Create-ServiceAccount-to-trigger-workflows" class="headerlink" title="Create ServiceAccount to trigger workflows"></a>Create ServiceAccount to trigger workflows</h3><details>
<summary>service-account.yaml</summary>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argo-events</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">operate-workflow-sa</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Similarly you can use a ClusterRole and ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">operate-workflow-role</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argo-events</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">argoproj.io</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">workflows</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">workflowtemplates</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cronworkflows</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">clusterworkflowtemplates</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">operate-workflow-role-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argo-events</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">operate-workflow-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">operate-workflow-sa</span></span><br></pre></td></tr></table></figure>
</details>

<h3 id="Create-the-webhook-event-source"><a href="#Create-the-webhook-event-source" class="headerlink" title="Create the webhook event source"></a>Create the webhook event source</h3><blockquote>
<p>官方不建议直接使用spec.service暴露服务，这个只是为了测试使用</p>
</blockquote>
<details>
<summary>event-source-example.yaml</summary>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">EventSource</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">webhook</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">12000</span></span><br><span class="line">        <span class="attr">targetPort:</span> <span class="number">12000</span></span><br><span class="line">  <span class="attr">webhook:</span></span><br><span class="line">    <span class="comment"># event-source can run multiple HTTP servers. Simply define a unique port to start a new HTTP server</span></span><br><span class="line">    <span class="attr">example:</span></span><br><span class="line">      <span class="comment"># port to run HTTP server on</span></span><br><span class="line">      <span class="attr">port:</span> <span class="string">&quot;12000&quot;</span></span><br><span class="line">      <span class="comment"># endpoint to listen to</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">/example</span></span><br><span class="line">      <span class="comment"># HTTP request method to allow. In this case, only POST requests are accepted</span></span><br><span class="line">      <span class="attr">method:</span> <span class="string">POST</span></span><br></pre></td></tr></table></figure>
</details>
<details>
<summary>event-source.yaml & event-source-svc.yaml</summary>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">EventSource</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-eventsource</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">webhook:</span></span><br><span class="line">    <span class="attr">gitlab-example:</span></span><br><span class="line">      <span class="attr">port:</span> <span class="string">&quot;13000&quot;</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">/webhook</span></span><br><span class="line">      <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-webhook</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">eventsource-name:</span> <span class="string">gitlab-eventsource</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">13000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">13000</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>

<h3 id="Create-the-webhook-sensor"><a href="#Create-the-webhook-sensor" class="headerlink" title="Create the webhook sensor"></a>Create the webhook sensor</h3><blockquote>
<p>senor可以定义一系列的triggers,例如k8s资源对象(eg:workflow对象本身) <a href="https://github.com/argoproj/argo-events/blob/master/api/sensor.md">sensor-api</a><br>示例2可以将资源文件与代码一起提交至代码库,方便进行回归测试,也可以查看不同时期workflow的差异</p>
</blockquote>
<details>
<summary>示例1: 完整的workflow对象</summary>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Sensor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">serviceAccountName:</span> <span class="string">operate-workflow-sa</span></span><br><span class="line">  <span class="attr">dependencies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-dep</span></span><br><span class="line">      <span class="attr">eventSourceName:</span> <span class="string">gitlab-eventsource</span></span><br><span class="line">      <span class="attr">eventName:</span> <span class="string">gitlab-example</span></span><br><span class="line">  <span class="attr">triggers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">template:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">gitlab-workflow-trigger</span></span><br><span class="line">        <span class="attr">k8s:</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">argoproj.io</span></span><br><span class="line">          <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">          <span class="attr">resource:</span> <span class="string">workflows</span></span><br><span class="line">          <span class="attr">operation:</span> <span class="string">create</span></span><br><span class="line">          <span class="attr">source:</span></span><br><span class="line">            <span class="attr">resource:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line">              <span class="attr">kind:</span> <span class="string">Workflow</span></span><br><span class="line">              <span class="attr">metadata:</span></span><br><span class="line">                <span class="attr">generateName:</span> <span class="string">gitlab-workflow-</span></span><br><span class="line">              <span class="attr">spec:</span></span><br><span class="line">                <span class="attr">entrypoint:</span> <span class="string">argo-ci</span></span><br><span class="line">                <span class="attr">arguments:</span></span><br><span class="line">                  <span class="attr">parameters:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">repo</span></span><br><span class="line">                      <span class="attr">value:</span> <span class="string">http://172.16.20.150/root/vue_todolist.git</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">revision</span></span><br><span class="line">                      <span class="attr">value:</span> <span class="string">main</span></span><br><span class="line">                <span class="attr">templates:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">argo-ci</span></span><br><span class="line">                    <span class="attr">steps:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line">                          <span class="attr">template:</span> <span class="string">checkout</span></span><br><span class="line">                          <span class="attr">arguments:</span></span><br><span class="line">                            <span class="attr">parameters:</span></span><br><span class="line">                              <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">repo</span></span><br><span class="line">                                <span class="attr">value:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;workflow.parameters.repo&#125;&#125;</span>&quot;</span></span><br><span class="line">                              <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">revision</span></span><br><span class="line">                                <span class="attr">value:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;workflow.parameters.revision&#125;&#125;</span>&quot;</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span></span><br><span class="line">                          <span class="attr">template:</span> <span class="string">build</span></span><br><span class="line">                          <span class="attr">arguments:</span></span><br><span class="line">                            <span class="attr">artifacts:</span></span><br><span class="line">                              <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">                                <span class="attr">from:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;steps.checkout.outputs.artifacts.source&#125;&#125;</span>&quot;</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line">                    <span class="attr">inputs:</span></span><br><span class="line">                      <span class="attr">parameters:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">repo</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">revision</span></span><br><span class="line">                      <span class="attr">artifacts:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">                          <span class="attr">path:</span> <span class="string">/src</span></span><br><span class="line">                          <span class="attr">git:</span></span><br><span class="line">                            <span class="attr">repo:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;inputs.parameters.repo&#125;&#125;</span>&quot;</span></span><br><span class="line">                            <span class="attr">revision:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;inputs.parameters.revision&#125;&#125;</span>&quot;</span></span><br><span class="line">                    <span class="attr">outputs:</span></span><br><span class="line">                      <span class="attr">artifacts:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">                          <span class="attr">path:</span> <span class="string">/src</span></span><br><span class="line">                    <span class="attr">container:</span></span><br><span class="line">                      <span class="attr">image:</span> <span class="string">my-ubuntu:v0.1</span></span><br><span class="line">                      <span class="attr">command:</span> [<span class="string">sh</span>, <span class="string">-c</span>]</span><br><span class="line">                      <span class="attr">args:</span> [<span class="string">&quot;cd /src &amp;&amp; git status &amp;&amp; ls -l&quot;</span>]</span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span></span><br><span class="line">                    <span class="attr">inputs:</span></span><br><span class="line">                      <span class="attr">artifacts:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">                          <span class="attr">path:</span> <span class="string">/src</span></span><br><span class="line">                    <span class="attr">outputs:</span></span><br><span class="line">                      <span class="attr">artifacts:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">                          <span class="attr">path:</span> <span class="string">/src</span></span><br><span class="line">                    <span class="attr">container:</span></span><br><span class="line">                      <span class="attr">image:</span> <span class="string">my-ubuntu:v0.1</span></span><br><span class="line">                      <span class="attr">command:</span> [<span class="string">sh</span>, <span class="string">-c</span>]</span><br><span class="line">                      <span class="attr">args:</span> [</span><br><span class="line">                          <span class="string">&quot;</span></span><br><span class="line"><span class="string">                          cd /src &amp;&amp;</span></span><br><span class="line"><span class="string">                          npm install --registry https://registry.npm.taobao.org &amp;&amp;</span></span><br><span class="line"><span class="string">                          npm run build</span></span><br><span class="line"><span class="string">                          &quot;</span>,</span><br><span class="line">                        ]</span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">                <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">                <span class="attr">dataKey:</span> <span class="string">body.project.git_http_url</span></span><br><span class="line">              <span class="attr">dest:</span> <span class="string">spec.arguments.parameters.0.value</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">                <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">                <span class="attr">dataKey:</span> <span class="string">body.ref</span></span><br><span class="line">              <span class="attr">dest:</span> <span class="string">spec.arguments.parameters.1.value</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>

<details>
<summary>示例2: 访问git仓库中的资源文件</summary>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Sensor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">serviceAccountName:</span> <span class="string">operate-workflow-sa</span></span><br><span class="line">  <span class="attr">dependencies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-dep</span></span><br><span class="line">      <span class="attr">eventSourceName:</span> <span class="string">gitlab-eventsource</span></span><br><span class="line">      <span class="attr">eventName:</span> <span class="string">gitlab-example</span></span><br><span class="line">  <span class="attr">triggers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">template:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">gitlab-workflow-trigger</span></span><br><span class="line">        <span class="attr">k8s:</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">argoproj.io</span></span><br><span class="line">          <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">          <span class="attr">resource:</span> <span class="string">workflows</span></span><br><span class="line">          <span class="attr">operation:</span> <span class="string">create</span></span><br><span class="line">          <span class="attr">source:</span></span><br><span class="line">            <span class="attr">git:</span></span><br><span class="line">              <span class="attr">filePath:</span> <span class="string">&quot;workflow/gitlab.yaml&quot;</span></span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">                <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">                <span class="attr">dataKey:</span> <span class="string">body.project.git_http_url</span></span><br><span class="line">              <span class="attr">dest:</span> <span class="string">spec.arguments.parameters.0.value</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">                <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">                <span class="attr">dataKey:</span> <span class="string">body.ref</span></span><br><span class="line">              <span class="attr">dest:</span> <span class="string">spec.arguments.parameters.1.value</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">            <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">            <span class="attr">dataKey:</span> <span class="string">body.project.git_http_url</span></span><br><span class="line">          <span class="attr">dest:</span> <span class="string">k8s.source.git.url</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span></span><br><span class="line">            <span class="attr">dependencyName:</span> <span class="string">test-dep</span></span><br><span class="line">            <span class="attr">dataKey:</span> <span class="string">body.ref</span></span><br><span class="line">          <span class="attr">dest:</span> <span class="string">k8s.source.git.ref</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>

<h2 id="部署argo-cd"><a href="#部署argo-cd" class="headerlink" title="部署argo cd"></a>部署argo cd</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl create namespace argocd</span><br><span class="line">kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml</span><br><span class="line">kubectl patch svc argocd-server -n argocd -p &#x27;&#123;&quot;spec&quot;: &#123;&quot;type&quot;: &quot;LoadBalancer&quot;&#125;&#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Argo</category>
      </categories>
      <tags>
        <tag>Argo</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker部署gitlab</title>
    <url>/posts/e32bdacf/</url>
    <content><![CDATA[<blockquote>
<p>Mac环境本地搭建Gitlab进行测试</p>
</blockquote>
<span id="more"></span>

<ul>
<li><a href="#1%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87">1.环境准备</a><ul>
<li><a href="#11-%E6%8B%89%E5%8F%96%E6%9C%80%E6%96%B0%E5%AE%B9%E5%99%A8">1.1 拉取最新容器</a></li>
<li><a href="#12-%E6%9E%84%E5%BB%BA%E5%AE%B9%E5%99%A8">1.2 构建容器</a><ul>
<li><a href="#121-%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E7%94%A8%E4%BA%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96">1.2.1 创建目录，用于数据持久化</a></li>
<li><a href="#122-%E6%9E%84%E5%BB%BA%E5%AE%B9%E5%99%A8">1.2.2 构建容器</a></li>
<li><a href="#123-%E6%9F%A5%E7%9C%8B%E5%AE%B9%E5%99%A8">1.2.3 查看容器</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-%E9%85%8D%E7%BD%AEgitlab%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80">2. 配置Gitlab访问地址</a></li>
<li><a href="#3-%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1">3. 访问服务</a></li>
<li><a href="#4-mac%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%BD%91%E7%BB%9C">4. mac访问宿主机网络</a></li>
</ul>
<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><h3 id="1-1-拉取最新容器"><a href="#1-1-拉取最新容器" class="headerlink" title="1.1 拉取最新容器"></a>1.1 拉取最新容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>
<h3 id="1-2-构建容器"><a href="#1-2-构建容器" class="headerlink" title="1.2 构建容器"></a>1.2 构建容器</h3><h4 id="1-2-1-创建目录，用于数据持久化"><a href="#1-2-1-创建目录，用于数据持久化" class="headerlink" title="1.2.1 创建目录，用于数据持久化"></a>1.2.1 创建目录，用于数据持久化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p $&#123;gitlab-home&#125;/&#123;data,config,logs&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-2-2-构建容器"><a href="#1-2-2-构建容器" class="headerlink" title="1.2.2 构建容器"></a>1.2.2 构建容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">-p 443:443 -p 80:80 -p 222:22 \</span><br><span class="line">--name gitlab --restart always \</span><br><span class="line">-v $&#123;gitlab-home&#125;/config:/etc/gitlab \</span><br><span class="line">-v $&#123;gitlab-home&#125;/logs:/var/log/gitlab \</span><br><span class="line">-v $&#123;gitlab-home&#125;/data:/var/opt/gitlab \</span><br><span class="line">gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>
<h4 id="1-2-3-查看容器"><a href="#1-2-3-查看容器" class="headerlink" title="1.2.3 查看容器"></a>1.2.3 查看容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps -a | grep gitlab</span><br></pre></td></tr></table></figure>
<h2 id="2-配置Gitlab访问地址"><a href="#2-配置Gitlab访问地址" class="headerlink" title="2. 配置Gitlab访问地址"></a>2. 配置Gitlab访问地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># step1: 进入容器</span><br><span class="line"># step2: vim /etc/gitlab/gitlab.rb 修改 external_url</span><br><span class="line"># step3: 重启容器</span><br></pre></td></tr></table></figure>
<h2 id="3-访问服务"><a href="#3-访问服务" class="headerlink" title="3. 访问服务"></a>3. 访问服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 管理员默认用户 root</span><br><span class="line">## 管理员默认密码 /etc/gitlab/initial_root_password</span><br></pre></td></tr></table></figure>
<h2 id="4-mac访问宿主机网络"><a href="#4-mac访问宿主机网络" class="headerlink" title="4. mac访问宿主机网络"></a>4. mac访问宿主机网络</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># step1: 使用Gitlab管理员账号修改如下配置</span><br><span class="line">Menu =&gt; Admin =&gt; Settings =&gt; Network =&gt; Outbound requests</span><br><span class="line">勾选Allow requests to the local network from web hooks and services</span><br><span class="line"># step2: container中使用docker.for.mac.localhost访问宿主机</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>Work Environment setup</title>
    <url>/posts/27b637df/</url>
    <content><![CDATA[<blockquote>
<p>用于工作环境的搭建</p>
</blockquote>
<span id="more"></span>

<h3 id="Mac-App"><a href="#Mac-App" class="headerlink" title="Mac App"></a>Mac App</h3><ul>
<li>InsomniaX for Mac (Disable the sleep mode on your Mac)</li>
<li>Karabiner-Elements (改建利器)</li>
<li>Alfred</li>
<li>Spectacle (分屏软件)</li>
<li>dozer (系统栏图标隐藏工具)</li>
<li>Itsycal (日历)</li>
<li>Hammerspoon</li>
<li>PicGo</li>
<li>kubectx</li>
</ul>
<h3 id="vim-conf"><a href="#vim-conf" class="headerlink" title="vim.conf"></a>vim.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot; 语法高亮</span><br><span class="line">syntax enable</span><br><span class="line">syntax on</span><br><span class="line">&quot; 编码设置</span><br><span class="line">set encoding=utf-8</span><br><span class="line">&quot; 显示匹配</span><br><span class="line">set showmatch</span><br><span class="line">&quot; 显示标尺</span><br><span class="line">set ruler</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set backspace=indent,eol,start</span><br><span class="line"></span><br><span class="line">call plug#begin(&#x27;~/.vim/plugged&#x27;)</span><br><span class="line">Plug &#x27;Yggdroot/indentLine&#x27;</span><br><span class="line">Plug &#x27;ayu-theme/ayu-vim&#x27;</span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; indentLine &#123;&#123;</span><br><span class="line">let g:indentLine_char = &#x27;┆&#x27;</span><br><span class="line">&quot; &#125;&#125;</span><br><span class="line">&quot; ayu-vim &#123;&#123;</span><br><span class="line">set termguicolors</span><br><span class="line">let ayucolor=&quot;dark&quot;</span><br><span class="line">colorscheme ayu</span><br><span class="line">&quot; &#125;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>CEPH客户端版本升级</title>
    <url>/posts/bab85c8a/</url>
    <content><![CDATA[<blockquote>
<p>修改默认Ubuntu软件源，升级ceph客户端版本至N版本(14.x.x)</p>
</blockquote>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -q -O- &#x27;https://download.ceph.com/keys/release.asc&#x27; | sudo apt-key add -</span><br><span class="line">echo deb https://download.ceph.com/debian-nautilus/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</span><br><span class="line">apt update</span><br><span class="line">apt install ceph-common</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CEPH</category>
      </categories>
  </entry>
  <entry>
    <title>s3-exporter实现</title>
    <url>/posts/f7f721f2/</url>
    <content><![CDATA[<blockquote>
<p>对CEPH S3的bucket容量监控,依赖于rados-admin命令的执行</p>
</blockquote>
<span id="more"></span>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">	<span class="string">&quot;flag&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line">	<span class="string">&quot;os/exec&quot;</span></span><br><span class="line">	<span class="string">&quot;strconv&quot;</span></span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/prometheus/client_golang/prometheus&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/prometheus/client_golang/prometheus/promhttp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	rootDir <span class="keyword">string</span></span><br><span class="line">	depth   <span class="keyword">int</span></span><br><span class="line">	port    <span class="keyword">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> BucketUsage <span class="keyword">struct</span> &#123;</span><br><span class="line">	Bucket <span class="keyword">string</span> <span class="string">`json:&quot;bucket&quot;`</span></span><br><span class="line">	Owner  <span class="keyword">string</span> <span class="string">`json:&quot;owner&quot;`</span></span><br><span class="line">	Usage  <span class="keyword">struct</span> &#123;</span><br><span class="line">		RGWMain <span class="keyword">struct</span> &#123;</span><br><span class="line">			Size         <span class="keyword">float64</span> <span class="string">`json:&quot;size&quot;`</span></span><br><span class="line">			SizeActual   <span class="keyword">float64</span> <span class="string">`json:&quot;size_actual&quot;`</span></span><br><span class="line">			SizeUtilized <span class="keyword">float64</span> <span class="string">`json:&quot;size_utilized&quot;`</span></span><br><span class="line">			NumObjects   <span class="keyword">float64</span> <span class="string">`json:&quot;num_objects&quot;`</span></span><br><span class="line">		&#125; <span class="string">`json:&quot;rgw.main&quot;`</span></span><br><span class="line">	&#125; <span class="string">`json:&quot;usage&quot;`</span></span><br><span class="line">	BucketQuota <span class="keyword">struct</span> &#123;</span><br><span class="line">		Enable     <span class="keyword">bool</span>    <span class="string">`json:&quot;enabled&quot;`</span></span><br><span class="line">		MaxSize    <span class="keyword">float64</span> <span class="string">`json:&quot;max_size&quot;`</span></span><br><span class="line">		MaxSizeKB  <span class="keyword">float64</span> <span class="string">`json:&quot;max_size_kb&quot;`</span></span><br><span class="line">		MaxObjects <span class="keyword">float64</span> <span class="string">`json:&quot;max_objects&quot;`</span></span><br><span class="line">	&#125; <span class="string">`json:&quot;bucket_quota&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> namespace <span class="keyword">string</span> = <span class="string">&quot;unionstor_radosgw_usage&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Collector <span class="keyword">struct</span> &#123;</span><br><span class="line">	mu                      sync.Mutex</span><br><span class="line">	BucketSizeBytes         *prometheus.GaugeVec</span><br><span class="line">	BucketSizeUtilizedBytes *prometheus.GaugeVec</span><br><span class="line">	BucketNumsObjects       *prometheus.GaugeVec</span><br><span class="line">	BucketQuotaEnable       *prometheus.GaugeVec</span><br><span class="line">	BucketQuotaMaxSize      *prometheus.GaugeVec</span><br><span class="line">	BucketQuotaMaxSizeBytes *prometheus.GaugeVec</span><br><span class="line">	BucketQuotaMaxObjects   *prometheus.GaugeVec</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">exec_cmd</span><span class="params">(command <span class="keyword">string</span>, timeout <span class="keyword">int</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">	ctx, cancel := context.WithTimeout(context.Background(), time.Second*time.Duration(timeout))</span><br><span class="line">	<span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line">	cmd := exec.CommandContext(ctx, <span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, command)</span><br><span class="line">	out, err := cmd.CombinedOutput()</span><br><span class="line">	<span class="keyword">return</span> out, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewCollector</span><span class="params">()</span> *<span class="title">Collector</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> &amp;Collector&#123;</span><br><span class="line">		BucketSizeBytes: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_size_bytes&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_size_bytes&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketSizeUtilizedBytes: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_size_utilized_bytes&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_size_utilized_bytes&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketNumsObjects: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_num_objects&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_num_objects&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketQuotaEnable: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_quota_enable&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_quota_enable&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketQuotaMaxSize: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_quota_max_size&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_quota_max_size&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketQuotaMaxSizeBytes: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_quota_max_size_bytes&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_quota_max_size_bytes&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">		BucketQuotaMaxObjects: prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">			Namespace: namespace,</span><br><span class="line">			Name:      <span class="string">&quot;bucket_quota_max_objects&quot;</span>,</span><br><span class="line">			Help:      <span class="string">&quot;bucket_quota_max_objects&quot;</span>,</span><br><span class="line">		&#125;, []<span class="keyword">string</span>&#123;<span class="string">&quot;bucket&quot;</span>, <span class="string">&quot;owner&quot;</span>&#125;),</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">collectorList</span><span class="params">()</span> []<span class="title">prometheus</span>.<span class="title">Collector</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> []prometheus.Collector&#123;</span><br><span class="line">		c.BucketSizeBytes,</span><br><span class="line">		c.BucketSizeUtilizedBytes,</span><br><span class="line">		c.BucketNumsObjects,</span><br><span class="line">		c.BucketQuotaEnable,</span><br><span class="line">		c.BucketQuotaMaxSize,</span><br><span class="line">		c.BucketQuotaMaxSizeBytes,</span><br><span class="line">		c.BucketQuotaMaxObjects,</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">Describe</span><span class="params">(ch <span class="keyword">chan</span>&lt;- *prometheus.Desc)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> _, metric := <span class="keyword">range</span> c.collectorList() &#123;</span><br><span class="line">		metric.Describe(ch)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">Collect</span><span class="params">(ch <span class="keyword">chan</span>&lt;- prometheus.Metric)</span></span> &#123;</span><br><span class="line">	c.mu.Lock()</span><br><span class="line">	<span class="keyword">defer</span> c.mu.Unlock()</span><br><span class="line">	<span class="keyword">if</span> err := c.collect(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Println(err.Error())</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, metric := <span class="keyword">range</span> c.collectorList() &#123;</span><br><span class="line">		metric.Collect(ch)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">collect</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	cmd := <span class="string">&quot;radosgw-admin bucket stats&quot;</span></span><br><span class="line">	cmdRet, err := exec_cmd(cmd, <span class="number">30</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;exec bucket stats error:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	bucketsUsage := []BucketUsage&#123;&#125;</span><br><span class="line">	err = json.Unmarshal(cmdRet, &amp;bucketsUsage)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;parse cmd returen error:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	c.BucketSizeBytes.Reset()</span><br><span class="line">	c.BucketSizeUtilizedBytes.Reset()</span><br><span class="line">	c.BucketNumsObjects.Reset()</span><br><span class="line">	c.BucketQuotaEnable.Reset()</span><br><span class="line">	c.BucketQuotaMaxSize.Reset()</span><br><span class="line">	c.BucketQuotaMaxSizeBytes.Reset()</span><br><span class="line">	c.BucketQuotaMaxObjects.Reset()</span><br><span class="line">	<span class="keyword">for</span> _, bucketUsage := <span class="keyword">range</span> bucketsUsage &#123;</span><br><span class="line">		bucketName := bucketUsage.Bucket</span><br><span class="line">		bucketOwner := bucketUsage.Owner</span><br><span class="line">		bucketSizeBytes := bucketUsage.Usage.RGWMain.SizeActual</span><br><span class="line">		bucketSizeUtilizedBytes := bucketUsage.Usage.RGWMain.SizeUtilized</span><br><span class="line">		bucketObjects := bucketUsage.Usage.RGWMain.NumObjects</span><br><span class="line">		<span class="keyword">var</span> bucketQuotaEnable <span class="keyword">float64</span> = <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> bucketUsage.BucketQuota.Enable &#123;</span><br><span class="line">			bucketQuotaEnable = <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		bucketQuotaMaxSize := bucketUsage.BucketQuota.MaxSize</span><br><span class="line">		bucketQuotaMaxSizeBytes := bucketUsage.BucketQuota.MaxSizeKB</span><br><span class="line">		bucketQuotaMaxObjects := bucketUsage.BucketQuota.MaxObjects</span><br><span class="line">		c.BucketSizeBytes.WithLabelValues(bucketName, bucketOwner).Set(bucketSizeBytes)</span><br><span class="line">		c.BucketSizeUtilizedBytes.WithLabelValues(bucketName, bucketOwner).Set(bucketSizeUtilizedBytes)</span><br><span class="line">		c.BucketNumsObjects.WithLabelValues(bucketName, bucketOwner).Set(bucketObjects)</span><br><span class="line">		c.BucketQuotaEnable.WithLabelValues(bucketName, bucketOwner).Set(bucketQuotaEnable)</span><br><span class="line">		c.BucketQuotaMaxSize.WithLabelValues(bucketName, bucketOwner).Set(bucketQuotaMaxSize)</span><br><span class="line">		c.BucketQuotaMaxSizeBytes.WithLabelValues(bucketName, bucketOwner).Set(bucketQuotaMaxSizeBytes)</span><br><span class="line">		c.BucketQuotaMaxObjects.WithLabelValues(bucketName, bucketOwner).Set(bucketQuotaMaxObjects)</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	flag.StringVar(&amp;rootDir, <span class="string">&quot;path&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;A cephfs path&quot;</span>)</span><br><span class="line">	flag.IntVar(&amp;depth, <span class="string">&quot;depth&quot;</span>, <span class="number">2</span>, <span class="string">&quot;default depth&quot;</span>)</span><br><span class="line">	flag.IntVar(&amp;port, <span class="string">&quot;port&quot;</span>, <span class="number">8080</span>, <span class="string">&quot;default exporter port&quot;</span>)</span><br><span class="line">	flag.Parse()</span><br><span class="line">	prometheus.MustRegister(NewCollector())</span><br><span class="line">	http.Handle(<span class="string">&quot;/metrics&quot;</span>, promhttp.Handler())</span><br><span class="line">	log.Fatal(http.ListenAndServe(<span class="string">&quot;:&quot;</span>+strconv.Itoa(port), <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CEPH</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>监控</tag>
      </tags>
  </entry>
</search>
